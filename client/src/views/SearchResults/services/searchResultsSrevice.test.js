import SearchResultsService from './searchResultsService';

it('Return the correct number of 9-items pages given a list', () => {
  const lengths = [12, 3, 23, 15, 100, 43, 64, 55, 81];
  const pages = [2, 1, 3, 2, 12, 5, 8, 7, 9];
  lengths.forEach((length, i) =>
    expect(SearchResultsService.getNumberOfPages(length)).toBe(pages[i])
  );
});

it('Returns a Nx9 matrix (pages array) from an 1xN vector (items array)', () => {
  const vectors = [
    [1, 2, 3, 4, 5, 6, 7],
    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],
    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18],
    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21],
    [
      1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
      22, 23, 24, 25, 26, 27, 28,
    ],
    [
      1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
      22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
    ],
  ];
  const matrices = [
    [[1, 2, 3, 4, 5, 6, 7]],
    [[1, 2, 3, 4, 5, 6, 7, 8, 9], [10]],
    [
      [1, 2, 3, 4, 5, 6, 7, 8, 9],
      [10, 11, 12, 13, 14, 15],
    ],
    [
      [1, 2, 3, 4, 5, 6, 7, 8, 9],
      [10, 11, 12, 13, 14, 15, 16, 17, 18],
    ],
    [
      [1, 2, 3, 4, 5, 6, 7, 8, 9],
      [10, 11, 12, 13, 14, 15, 16, 17, 18],
      [19, 20, 21],
    ],
    [
      [1, 2, 3, 4, 5, 6, 7, 8, 9],
      [10, 11, 12, 13, 14, 15, 16, 17, 18],
      [19, 20, 21, 22, 23, 24, 25, 26, 27],
      [28],
    ],
    [
      [1, 2, 3, 4, 5, 6, 7, 8, 9],
      [10, 11, 12, 13, 14, 15, 16, 17, 18],
      [19, 20, 21, 22, 23, 24, 25, 26, 27],
      [28, 29, 30, 31],
    ],
  ];

  vectors.forEach((vector, i) =>
    expect(SearchResultsService.getGridPages(vector)).toStrictEqual(matrices[i])
  );
});
